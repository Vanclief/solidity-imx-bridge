/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IMXBridge, IMXBridgeInterface } from "../IMXBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC721Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC721Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridgedTokenAddress",
        type: "address",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
    ],
    name: "setSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001d1a38038062001d1a833981016040819052610031916100ba565b600160005561003f33610068565b600480546001600160a01b0319166001600160a01b0393909316929092179091556003556100f2565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156100cc578182fd5b82516001600160a01b03811681146100e2578283fd5b6020939093015192949293505050565b611c1880620001026000396000f3fe6080604052600436106101445760003560e01c806397feb926116100c0578063d29a4bf611610074578063d8619f5611610059578063d8619f56146103cf578063ddca3f43146103e2578063f2fde38b146103f857600080fd5b8063d29a4bf61461038f578063d7e5fbf3146103af57600080fd5b8063a06617cd116100a5578063a06617cd14610331578063a26cb27014610367578063ced72f871461037a57600080fd5b806397feb926146102fb5780639a8a05921461031b57600080fd5b80635b7633d011610117578063715018a6116100fc578063715018a61461029b5780637ecebe00146102b05780638da5cb5b146102dd57600080fd5b80635b7633d01461025b57806369fe0e2d1461027b57600080fd5b8063046dc16614610149578063150b7a021461016b5780631a296e02146101e55780632d0335ab14610217575b600080fd5b34801561015557600080fd5b5061016961016436600461196c565b610418565b005b34801561017757600080fd5b506101af6101863660046119dc565b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b3480156101f157600080fd5b506004546001600160a01b03165b6040516001600160a01b0390911681526020016101dc565b34801561022357600080fd5b5061024d61023236600461196c565b6001600160a01b031660009081526005602052604090205490565b6040519081526020016101dc565b34801561026757600080fd5b506004546101ff906001600160a01b031681565b34801561028757600080fd5b50610169610296366004611b00565b6104a6565b3480156102a757600080fd5b50610169610505565b3480156102bc57600080fd5b5061024d6102cb36600461196c565b60056020526000908152604090205481565b3480156102e957600080fd5b506001546001600160a01b03166101ff565b34801561030757600080fd5b50610169610316366004611ab5565b61056b565b34801561032757600080fd5b5061024d60035481565b34801561033d57600080fd5b506101ff61034c36600461196c565b6006602052600090815260409020546001600160a01b031681565b6101696103753660046119dc565b610772565b34801561038657600080fd5b5060025461024d565b34801561039b57600080fd5b506101696103aa366004611ab5565b610b73565b3480156103bb57600080fd5b506101696103ca3660046119a4565b610cf8565b6101696103dd3660046119dc565b610d8d565b3480156103ee57600080fd5b5061024d60025481565b34801561040457600080fd5b5061016961041336600461196c565b61103c565b6001546001600160a01b031633146104775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633146105005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046e565b600255565b6001546001600160a01b0316331461055f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046e565b610569600061111e565b565b6001600160a01b038083166000908152600660205260409020548391166105d45760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161046e565b600260005414156106275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161046e565b6002600055816106795760405162461bcd60e51b815260206004820152601860248201527f4d757374206465706f736974206d6f7265207468616e20300000000000000000604482015260640161046e565b6001600160a01b03808416600090815260066020526040902054166106a08133308661117d565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152306004820152602481018490526001600160a01b03821690639dc29fac90604401600060405180830381600087803b15801561070157600080fd5b505af1158015610715573d6000803e3d6000fd5b505060408051338152602081018790526001600160a01b038516918101919091527f10210aba465589e42fd8145472c6bbce9f47079ffa6fe89f5c6e741fae43bcea925060600190505b60405180910390a1505060016000555050565b6002543410156107c45760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e20666565000000000000000000604482015260640161046e565b6001600160a01b0380841660009081526006602052604090205484911661082d5760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161046e565b600260005414156108805760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161046e565b600260009081556001600160a01b0380861682526006602052604082205416906108bf876001600160a01b031660009081526005602052604090205490565b905060006108e9600460009054906101000a90046001600160a01b0316898989866003548b61120b565b9050806109385760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161046e565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810187905283906001600160a01b03821690636352211e9060240160206040518083038186803b15801561099357600080fd5b505afa9250505080156109c3575060408051601f3d908101601f191682019092526109c091810190611988565b60015b610a325760405163da1919b360e01b81526001600160a01b038a811660048301526024820189905285919082169063da1919b390604401600060405180830381600087803b158015610a1457600080fd5b505af1158015610a28573d6000803e3d6000fd5b5050505050610af4565b6001600160a01b0381163014610a8a5760405162461bcd60e51b815260206004820152601a60248201527f455243373231206973206e6f74206f6e20746865207661756c74000000000000604482015260640161046e565b604051632142170760e11b81523060048201526001600160a01b038b81166024830152604482018a90528316906342842e0e90606401600060405180830381600087803b158015610ada57600080fd5b505af1158015610aee573d6000803e3d6000fd5b50505050505b610aff836001611280565b6001600160a01b038a81166000818152600560209081526040918290209490945580519182529281018a9052908616918101919091527fe2d807fc8c90ab37f9344f780c2fd13681207c17b810d5cb6c066191c05f4639906060015b60405180910390a15050600160005550505050505050565b6001600160a01b03808316600090815260066020526040902054839116610bdc5760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161046e565b60026000541415610c2f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161046e565b600260009081556001600160a01b0384811682526006602052604091829020549151632142170760e11b81523360048201523060248201526044810185905291169081906342842e0e90606401600060405180830381600087803b158015610c9657600080fd5b505af1158015610caa573d6000803e3d6000fd5b505060408051338152602081018790526001600160a01b038516918101919091527f4be8f6117fc663fc6fbe495d6c7fd7f779b427f47d36bb2fb98523ca943eaa889250606001905061075f565b6001546001600160a01b03163314610d525760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046e565b6001600160a01b039182166000908152600660205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600254341015610ddf5760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e20666565000000000000000000604482015260640161046e565b6001600160a01b03808416600090815260066020526040902054849116610e485760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f742072656769737465726564000000000000604482015260640161046e565b60026000541415610e9b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161046e565b600260009081556001600160a01b038086168252600660205260408220541690610eda876001600160a01b031660009081526005602052604090205490565b90506000610f04600460009054906101000a90046001600160a01b0316898989866003548b61120b565b905080610f535760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161046e565b60405163da1919b360e01b81526001600160a01b0389811660048301526024820188905284919082169063da1919b390604401600060405180830381600087803b158015610fa057600080fd5b505af1158015610fb4573d6000803e3d6000fd5b5050506001600160a01b038a16600090815260056020526040902054610fdc91506001611280565b6001600160a01b038a81166000818152600560209081526040918290209490945580519182529281018a9052908616918101919091527f38c796d42faa6e2ff4bfd87672a65992ceccc9e4cacff9aeb11eb6145da8444190606001610b5b565b6001546001600160a01b031633146110965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046e565b6001600160a01b0381166111125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161046e565b61111b8161111e565b50565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611205908590611293565b50505050565b60408051606088811b6bffffffffffffffffffffffff199081166020808501919091529189901b166034830152604882018790526068820186905260888083018690528351808403909101815260a8909201909252805191012060009061127389828561137d565b9998505050505050505050565b600061128c8284611b67565b9392505050565b60006112e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114009092919063ffffffff16565b80519091501561137857808060200190518101906113069190611ae0565b6113785760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161046e565b505050565b6000806113d7846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050846001600160a01b03166113ed8285611417565b6001600160a01b03161495945050505050565b606061140f848460008561143b565b949350505050565b60008060006114268585611583565b91509150611433816115f3565b509392505050565b6060824710156114b35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161046e565b6001600160a01b0385163b61150a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046e565b600080866001600160a01b031685876040516115269190611b18565b60006040518083038185875af1925050503d8060008114611563576040519150601f19603f3d011682016040523d82523d6000602084013e611568565b606091505b50915091506115788282866117f4565b979650505050505050565b6000808251604114156115ba5760208301516040840151606085015160001a6115ae8782858561182d565b945094505050506115ec565b8251604014156115e457602083015160408401516115d986838361191a565b9350935050506115ec565b506000905060025b9250929050565b600081600481111561161557634e487b7160e01b600052602160045260246000fd5b141561161e5750565b600181600481111561164057634e487b7160e01b600052602160045260246000fd5b141561168e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161046e565b60028160048111156116b057634e487b7160e01b600052602160045260246000fd5b14156116fe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161046e565b600381600481111561172057634e487b7160e01b600052602160045260246000fd5b14156117795760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161046e565b600481600481111561179b57634e487b7160e01b600052602160045260246000fd5b141561111b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161046e565b6060831561180357508161128c565b8251156118135782518084602001fd5b8160405162461bcd60e51b815260040161046e9190611b34565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118645750600090506003611911565b8460ff16601b1415801561187c57508460ff16601c14155b1561188d5750600090506004611911565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156118e1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661190a57600060019250925050611911565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161195060ff86901c601b611b67565b905061195e8782888561182d565b935093505050935093915050565b60006020828403121561197d578081fd5b813561128c81611bcd565b600060208284031215611999578081fd5b815161128c81611bcd565b600080604083850312156119b6578081fd5b82356119c181611bcd565b915060208301356119d181611bcd565b809150509250929050565b600080600080608085870312156119f1578182fd5b84356119fc81611bcd565b93506020850135611a0c81611bcd565b925060408501359150606085013567ffffffffffffffff80821115611a2f578283fd5b818701915087601f830112611a42578283fd5b813581811115611a5457611a54611bb7565b604051601f8201601f19908116603f01168101908382118183101715611a7c57611a7c611bb7565b816040528281528a6020848701011115611a94578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611ac7578182fd5b8235611ad281611bcd565b946020939093013593505050565b600060208284031215611af1578081fd5b8151801515811461128c578182fd5b600060208284031215611b11578081fd5b5035919050565b60008251611b2a818460208701611b8b565b9190910192915050565b6020815260008251806020840152611b53816040850160208701611b8b565b601f01601f19169190910160400192915050565b60008219821115611b8657634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015611ba6578181015183820152602001611b8e565b838111156112055750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461111b57600080fdfea26469706673582212204c1e94fc836258a90e918c2c61526615490e7575f6487ff5740fbc4b511ec83464736f6c63430008040033";

export class IMXBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _signerAddress: string,
    _chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IMXBridge> {
    return super.deploy(
      _signerAddress,
      _chainId,
      overrides || {}
    ) as Promise<IMXBridge>;
  }
  getDeployTransaction(
    _signerAddress: string,
    _chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _signerAddress,
      _chainId,
      overrides || {}
    );
  }
  attach(address: string): IMXBridge {
    return super.attach(address) as IMXBridge;
  }
  connect(signer: Signer): IMXBridge__factory {
    return super.connect(signer) as IMXBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMXBridgeInterface {
    return new utils.Interface(_abi) as IMXBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMXBridge {
    return new Contract(address, _abi, signerOrProvider) as IMXBridge;
  }
}
