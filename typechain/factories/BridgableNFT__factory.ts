/**
 * /* Autogenerated file. Do not edit manually.
 *
 * @format
 */

/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeableNFT, BridgeableNFTInterface } from "../BridgeableNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_imxBridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "blueprint",
        type: "bytes",
      },
    ],
    name: "AssetMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "imxBridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "metadata",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "mintingBlob",
        type: "bytes",
      },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023c5380380620023c583398101604081905262000034916200025b565b80838381600090805190602001906200004f92919062000102565b5080516200006590600190602084019062000102565b505050620000826200007c620000ac60201b60201c565b620000b0565b600780546001600160a01b0319166001600160a01b03929092169190911790555062000337915050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011090620002e4565b90600052602060002090601f0160209004810192826200013457600085556200017f565b82601f106200014f57805160ff19168380011785556200017f565b828001600101855582156200017f579182015b828111156200017f57825182559160200191906001019062000162565b506200018d92915062000191565b5090565b5b808211156200018d576000815560010162000192565b600082601f830112620001b9578081fd5b81516001600160401b0380821115620001d657620001d662000321565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000321565b816040528381526020925086838588010111156200021d578485fd5b8491505b8382101562000240578582018301518183018401529082019062000221565b838211156200025157848385830101525b9695505050505050565b60008060006060848603121562000270578283fd5b83516001600160401b038082111562000287578485fd5b6200029587838801620001a8565b94506020860151915080821115620002ab578384fd5b50620002ba86828701620001a8565b604086015190935090506001600160a01b0381168114620002d9578182fd5b809150509250925092565b600181811c90821680620002f957607f821691505b602082108114156200031b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61207e80620003476000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d8578063b88d4fde1161008c578063e3684e3911610066578063e3684e39146102ee578063e985e9c514610301578063f2fde38b1461033d57600080fd5b8063b88d4fde146102c0578063c87b56dd146102d3578063d547cfb7146102e657600080fd5b80638da5cb5b116100bd5780638da5cb5b1461029457806395d89b41146102a5578063a22cb465146102ad57600080fd5b806370a082311461026b578063715018a61461028c57600080fd5b806323b872dd1161012f57806341a432151161011457806341a432151461023257806342842e0e146102455780636352211e1461025857600080fd5b806323b872dd1461020c57806330176e131461021f57600080fd5b8063081812fc11610160578063081812fc146101b9578063095ea7b3146101e457806319ee6e3f146101f957600080fd5b806301ffc9a71461017c57806306fdde03146101a4575b600080fd5b61018f61018a366004611d5f565b610350565b60405190151581526020015b60405180910390f35b6101ac6103ed565b60405161019b9190611ebd565b6101cc6101c7366004611ddd565b61047f565b6040516001600160a01b03909116815260200161019b565b6101f76101f2366004611cb4565b610519565b005b6101f7610207366004611cdd565b61064b565b6101f761021a366004611bc6565b61077a565b6101f761022d366004611d97565b610801565b6007546101cc906001600160a01b031681565b6101f7610253366004611bc6565b610872565b6101cc610266366004611ddd565b61088d565b61027e610279366004611b7a565b610918565b60405190815260200161019b565b6101f76109b2565b6006546001600160a01b03166101cc565b6101ac610a18565b6101f76102bb366004611c7a565b610a27565b6101f76102ce366004611c01565b610a32565b6101ac6102e1366004611ddd565b610ac0565b6101ac610ba9565b6101ac6102fc366004611ddd565b610c37565b61018f61030f366004611b94565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101f761034b366004611b7a565b610c50565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806103b357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103e757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546103fc90611f86565b80601f016020809104026020016040519081016040528092919081815260200182805461042890611f86565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104fd5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105248261088d565b9050806001600160a01b0316836001600160a01b031614156105ae5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104f4565b336001600160a01b03821614806105ca57506105ca813361030f565b61063c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104f4565b6106468383610d32565b505050565b8260011461069b5760405162461bcd60e51b815260206004820152601d60248201527f5175616e74697479206d757374206265203120666f722045524337323100000060448201526064016104f4565b6007546001600160a01b0316331461071b5760405162461bcd60e51b815260206004820152602860248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279204960448201527f4d5842726964676500000000000000000000000000000000000000000000000060648201526084016104f4565b6000806107288484610dad565b91509150610737868383610f8d565b7f31e594f6b36b98ec520a91cbbba7b8724b1cec27393f86d8f0f6aa6084db0aaf86838360405161076a93929190611e8c565b60405180910390a1505050505050565b6107843382610fb6565b6107f65760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104f4565b6106468383836110ad565b6006546001600160a01b0316331461085b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f4565b805161086e906008906020840190611a4f565b5050565b61064683838360405180602001604052806000815250610a32565b6000818152600260205260408120546001600160a01b0316806103e75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104f4565b60006001600160a01b0382166109965760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104f4565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610a0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f4565b610a166000611287565b565b6060600180546103fc90611f86565b61086e3383836112e6565b610a3c3383610fb6565b610aae5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104f4565b610aba848484846113b5565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b4d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104f4565b6000610b57611433565b90506000815111610b775760405180602001604052806000815250610ba2565b80610b8184611442565b604051602001610b92929190611e21565b6040516020818303038152906040525b9392505050565b60088054610bb690611f86565b80601f0160208091040260200160405190810160405280929190818152602001828054610be290611f86565b8015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b505050505081565b60096020526000908152604090208054610bb690611f86565b6006546001600160a01b03163314610caa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f4565b6001600160a01b038116610d265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104f4565b610d2f81611287565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610d748261088d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600060606000610e2785858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051808201909152600181527f3a000000000000000000000000000000000000000000000000000000000000006020820152935091506115909050565b90506000811215610e7a5760405162461bcd60e51b815260206004820152601460248201527f536570617261746f72206d75737420657869737400000000000000000000000060448201526064016104f4565b6000610ed486600187610e8d8287611f43565b92610e9a93929190611ed0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168292505050565b905060006003610ee48488611f43565b610eee9190611f43565b905080610f1257816040518060200160405280600081525094509450505050610f86565b3660008888610f22876002611ef8565b90610f2e60018c611f43565b92610f3b93929190611ed0565b9150915083828281818080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250959c50919a50505050505050505050505b9250929050565b610f978383611710565b60008281526009602090815260409091208251610aba92840190611a4f565b6000818152600260205260408120546001600160a01b031661102f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104f4565b600061103a8361088d565b9050806001600160a01b0316846001600160a01b031614806110755750836001600160a01b031661106a8461047f565b6001600160a01b0316145b806110a557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166110c08261088d565b6001600160a01b03161461113c5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104f4565b6001600160a01b0382166111b75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104f4565b6111c2600082610d32565b6001600160a01b03831660009081526003602052604081208054600192906111eb908490611f43565b90915550506001600160a01b0382166000908152600360205260408120805460019290611219908490611ef8565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156113485760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113c08484846110ad565b6113cc8484848461172a565b610aba5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f4565b6060600880546103fc90611f86565b60608161148257505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156114ac578061149681611fc1565b91506114a59050600a83611f10565b9150611486565b60008167ffffffffffffffff8111156114d557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156114ff576020820181803683370190505b5090505b84156110a557611514600183611f43565b9150611521600a86611fdc565b61152c906030611ef8565b60f81b81838151811061154f57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611589600a86611f10565b9450611503565b815160009083906001146115b457634e487b7160e01b600052600160045260246000fd5b825b855181101561167557816000815181106115e057634e487b7160e01b600052603260045260246000fd5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191686828151811061162d57634e487b7160e01b600052603260045260246000fd5b01602001517fff00000000000000000000000000000000000000000000000000000000000000161415611663579150610ba29050565b8061166d81611fc1565b9150506115b6565b5060001995945050505050565b600080805b83518110156117095760008482815181106116b257634e487b7160e01b600052603260045260246000fd5b016020015160f81c9050603081108015906116ce575060398111155b156116f6576116de603082611f43565b6116e984600a611f24565b6116f39190611ef8565b92505b508061170181611fc1565b915050611687565b5092915050565b61086e828260405180602001604052806000815250611882565b60006001600160a01b0384163b1561187757604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061176e903390899088908890600401611e50565b602060405180830381600087803b15801561178857600080fd5b505af19250505080156117b8575060408051601f3d908101601f191682019092526117b591810190611d7b565b60015b61185d573d8080156117e6576040519150601f19603f3d011682016040523d82523d6000602084013e6117eb565b606091505b5080516118555760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110a5565b506001949350505050565b61188c8383611900565b611899600084848461172a565b6106465760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104f4565b6001600160a01b0382166119565760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f4565b6000818152600260205260409020546001600160a01b0316156119bb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f4565b6001600160a01b03821660009081526003602052604081208054600192906119e4908490611ef8565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611a5b90611f86565b90600052602060002090601f016020900481019282611a7d5760008555611ac3565b82601f10611a9657805160ff1916838001178555611ac3565b82800160010185558215611ac3579182015b82811115611ac3578251825591602001919060010190611aa8565b50611acf929150611ad3565b5090565b5b80821115611acf5760008155600101611ad4565b600067ffffffffffffffff80841115611b0357611b0361201c565b604051601f8501601f19908116603f01168101908282118183101715611b2b57611b2b61201c565b81604052809350858152868686011115611b4457600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611b7557600080fd5b919050565b600060208284031215611b8b578081fd5b610ba282611b5e565b60008060408385031215611ba6578081fd5b611baf83611b5e565b9150611bbd60208401611b5e565b90509250929050565b600080600060608486031215611bda578081fd5b611be384611b5e565b9250611bf160208501611b5e565b9150604084013590509250925092565b60008060008060808587031215611c16578081fd5b611c1f85611b5e565b9350611c2d60208601611b5e565b925060408501359150606085013567ffffffffffffffff811115611c4f578182fd5b8501601f81018713611c5f578182fd5b611c6e87823560208401611ae8565b91505092959194509250565b60008060408385031215611c8c578182fd5b611c9583611b5e565b915060208301358015158114611ca9578182fd5b809150509250929050565b60008060408385031215611cc6578182fd5b611ccf83611b5e565b946020939093013593505050565b60008060008060608587031215611cf2578384fd5b611cfb85611b5e565b935060208501359250604085013567ffffffffffffffff80821115611d1e578384fd5b818701915087601f830112611d31578384fd5b813581811115611d3f578485fd5b886020828501011115611d50578485fd5b95989497505060200194505050565b600060208284031215611d70578081fd5b8135610ba281612032565b600060208284031215611d8c578081fd5b8151610ba281612032565b600060208284031215611da8578081fd5b813567ffffffffffffffff811115611dbe578182fd5b8201601f81018413611dce578182fd5b6110a584823560208401611ae8565b600060208284031215611dee578081fd5b5035919050565b60008151808452611e0d816020860160208601611f5a565b601f01601f19169290920160200192915050565b60008351611e33818460208801611f5a565b835190830190611e47818360208801611f5a565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611e826080830184611df5565b9695505050505050565b6001600160a01b0384168152826020820152606060408201526000611eb46060830184611df5565b95945050505050565b602081526000610ba26020830184611df5565b60008085851115611edf578182fd5b83861115611eeb578182fd5b5050820193919092039150565b60008219821115611f0b57611f0b611ff0565b500190565b600082611f1f57611f1f612006565b500490565b6000816000190483118215151615611f3e57611f3e611ff0565b500290565b600082821015611f5557611f55611ff0565b500390565b60005b83811015611f75578181015183820152602001611f5d565b83811115610aba5750506000910152565b600181811c90821680611f9a57607f821691505b60208210811415611fbb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611fd557611fd5611ff0565b5060010190565b600082611feb57611feb612006565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610d2f57600080fdfea2646970667358221220b99cdc86c7d357de6826118644bd16387ada156fbde5d214b091f0f5ec3730d964736f6c63430008040033";

export class BridgeableNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeableNFT> {
    return super.deploy(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    ) as Promise<BridgeableNFT>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    );
  }
  attach(address: string): BridgeableNFT {
    return super.attach(address) as BridgeableNFT;
  }
  connect(signer: Signer): BridgeableNFT__factory {
    return super.connect(signer) as BridgeableNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeableNFTInterface {
    return new utils.Interface(_abi) as BridgeableNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeableNFT {
    return new Contract(address, _abi, signerOrProvider) as BridgeableNFT;
  }
}
