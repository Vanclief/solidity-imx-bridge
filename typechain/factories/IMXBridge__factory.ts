/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IMXBridge, IMXBridgeInterface } from "../IMXBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "getWithdrawMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
    ],
    name: "setSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161123a38038061123a83398101604081905261002f91610090565b61003833610040565b6002556100a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a1578081fd5b5051919050565b611183806100b76000396000f3fe6080604052600436106100e85760003560e01c80637ecebe001161008a578063d1024b4511610059578063d1024b45146102eb578063ddca3f431461031b578063e70c36ed14610331578063f2fde38b1461034457600080fd5b80637ecebe00146102545780638da5cb5b14610281578063a06617cd1461029f578063adc879e9146102d557600080fd5b80635b7633d0116100c65780635b7633d01461018a5780635bea1640146101aa57806369fe0e2d1461021f578063715018a61461023f57600080fd5b8063046dc166146100ed5780631a296e021461010f5780632d0335ab14610146575b600080fd5b3480156100f957600080fd5b5061010d610108366004610ef1565b610364565b005b34801561011b57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015257600080fd5b5061017c610161366004610ef1565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161013d565b34801561019657600080fd5b50600354610129906001600160a01b031681565b3480156101b657600080fd5b5061017c6101c5366004611018565b6040516bffffffffffffffffffffffff19606086811b8216602084015285901b1660348201526048810183905260688101829052600090608801604051602081830303815290604052805190602001209050949350505050565b34801561022b57600080fd5b5061010d61023a36600461105d565b6103f2565b34801561024b57600080fd5b5061010d610451565b34801561026057600080fd5b5061017c61026f366004610ef1565b60046020526000908152604090205481565b34801561028d57600080fd5b506000546001600160a01b0316610129565b3480156102ab57600080fd5b506101296102ba366004610ef1565b6005602052600090815260409020546001600160a01b031681565b3480156102e157600080fd5b5061017c60025481565b3480156102f757600080fd5b5061030b610306366004610f29565b6104b7565b604051901515815260200161013d565b34801561032757600080fd5b5061017c60015481565b61010d61033f366004610fae565b61057d565b34801561035057600080fd5b5061010d61035f366004610ef1565b61083b565b6000546001600160a01b031633146103c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461044c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ba565b600155565b6000546001600160a01b031633146104ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ba565b6104b5600061091d565b565b60408051606087811b6bffffffffffffffffffffffff199081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e4909301909352815191012060009190886001600160a01b0316610566828661097a565b6001600160a01b0316149998505050505050505050565b6001543410156105cf5760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e2066656500000000000000000060448201526064016103ba565b336000908152600460205260408120546003549091906105fc906001600160a01b031687878786886104b7565b90508061064b5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103ba565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905285906001600160a01b03821690636352211e9060240160206040518083038186803b1580156106a657600080fd5b505afa9250505080156106d6575060408051601f3d908101601f191682019092526106d391810190610f0d565b60015b61079c576107186040518060400160405280600581526020017f436174636800000000000000000000000000000000000000000000000000000081525061099e565b6040517fda1919b30000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301526024820187905287919082169063da1919b390604401600060405180830381600087803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b50505050506107f2565b6107db6040518060400160405280600581526020017f6f776e657200000000000000000000000000000000000000000000000000000081525082610a0f565b6001600160a01b03811630146107f057600080fd5b505b6001600160a01b038716600090815260046020526040902054610816906001610a86565b6001600160a01b03909716600090815260046020526040902096909655505050505050565b6000546001600160a01b031633146108955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103ba565b6001600160a01b0381166109115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103ba565b61091a8161091d565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006109898585610a99565b9150915061099681610b09565b509392505050565b61091a816040516024016109b291906110c0565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac00000000000000000000000000000000000000000000000000000000179052610d0a565b610a828282604051602401610a259291906110d3565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f319af33300000000000000000000000000000000000000000000000000000000179052610d0a565b5050565b6000610a9282846110fe565b9392505050565b600080825160411415610ad05760208301516040840151606085015160001a610ac487828585610d2b565b94509450505050610b02565b825160401415610afa5760208301516040840151610aef868383610e18565b935093505050610b02565b506000905060025b9250929050565b6000816004811115610b2b57634e487b7160e01b600052602160045260246000fd5b1415610b345750565b6001816004811115610b5657634e487b7160e01b600052602160045260246000fd5b1415610ba45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103ba565b6002816004811115610bc657634e487b7160e01b600052602160045260246000fd5b1415610c145760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103ba565b6003816004811115610c3657634e487b7160e01b600052602160045260246000fd5b1415610c8f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103ba565b6004816004811115610cb157634e487b7160e01b600052602160045260246000fd5b141561091a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103ba565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d625750600090506003610e0f565b8460ff16601b14158015610d7a57508460ff16601c14155b15610d8b5750600090506004610e0f565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610ddf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e0857600060019250925050610e0f565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681610e4e60ff86901c601b6110fe565b9050610e5c87828885610d2b565b935093505050935093915050565b600082601f830112610e7a578081fd5b813567ffffffffffffffff80821115610e9557610e95611122565b604051601f8301601f19908116603f01168101908282118183101715610ebd57610ebd611122565b81604052838152866020858801011115610ed5578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610f02578081fd5b8135610a9281611138565b600060208284031215610f1e578081fd5b8151610a9281611138565b60008060008060008060c08789031215610f41578182fd5b8635610f4c81611138565b95506020870135610f5c81611138565b94506040870135610f6c81611138565b9350606087013592506080870135915060a087013567ffffffffffffffff811115610f95578182fd5b610fa189828a01610e6a565b9150509295509295509295565b60008060008060808587031215610fc3578384fd5b8435610fce81611138565b93506020850135610fde81611138565b925060408501359150606085013567ffffffffffffffff811115611000578182fd5b61100c87828801610e6a565b91505092959194509250565b6000806000806080858703121561102d578384fd5b843561103881611138565b9350602085013561104881611138565b93969395505050506040820135916060013590565b60006020828403121561106e578081fd5b5035919050565b60008151808452815b8181101561109a5760208185018101518683018201520161107e565b818111156110ab5782602083870101525b50601f01601f19169290920160200192915050565b602081526000610a926020830184611075565b6040815260006110e66040830185611075565b90506001600160a01b03831660208301529392505050565b6000821982111561111d57634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461091a57600080fdfea26469706673582212208f8d554a6549b81e60c44a953a6d582ad15884a4ecc2c3418e85fa76c840223a64736f6c63430008040033";

export class IMXBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IMXBridge> {
    return super.deploy(_chainID, overrides || {}) as Promise<IMXBridge>;
  }
  getDeployTransaction(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainID, overrides || {});
  }
  attach(address: string): IMXBridge {
    return super.attach(address) as IMXBridge;
  }
  connect(signer: Signer): IMXBridge__factory {
    return super.connect(signer) as IMXBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMXBridgeInterface {
    return new utils.Interface(_abi) as IMXBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMXBridge {
    return new Contract(address, _abi, signerOrProvider) as IMXBridge;
  }
}
