/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IMXBridge, IMXBridgeInterface } from "../IMXBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "getWithdrawMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
    ],
    name: "setSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e01380380610e0183398101604081905261002f91610090565b61003833610040565b6002556100a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a1578081fd5b5051919050565b610d4a806100b76000396000f3fe6080604052600436106101295760003560e01c806397aba7f9116100a5578063d1024b4511610074578063e70c36ed11610059578063e70c36ed146103d0578063f2fde38b146103e3578063fa5408011461040357600080fd5b8063d1024b451461038a578063ddca3f43146103ba57600080fd5b806397aba7f9146102e0578063a06617cd14610300578063a7bb580314610336578063adc879e91461037457600080fd5b80635bea1640116100fc578063715018a6116100e1578063715018a6146102805780637ecebe00146102955780638da5cb5b146102c257600080fd5b80635bea1640146101eb57806369fe0e2d1461026057600080fd5b8063046dc1661461012e5780631a296e02146101505780632d0335ab146101875780635b7633d0146101cb575b600080fd5b34801561013a57600080fd5b5061014e610149366004610ac5565b610471565b005b34801561015c57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019357600080fd5b506101bd6101a2366004610ac5565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161017e565b3480156101d757600080fd5b5060035461016a906001600160a01b031681565b3480156101f757600080fd5b506101bd610206366004610bf3565b6040516bffffffffffffffffffffffff19606086811b8216602084015285901b1660348201526048810183905260688101829052600090608801604051602081830303815290604052805190602001209050949350505050565b34801561026c57600080fd5b5061014e61027b366004610c38565b6104ff565b34801561028c57600080fd5b5061014e61055e565b3480156102a157600080fd5b506101bd6102b0366004610ac5565b60046020526000908152604090205481565b3480156102ce57600080fd5b506000546001600160a01b031661016a565b3480156102ec57600080fd5b5061016a6102fb366004610c50565b6105c4565b34801561030c57600080fd5b5061016a61031b366004610ac5565b6005602052600090815260409020546001600160a01b031681565b34801561034257600080fd5b50610356610351366004610c95565b610643565b60408051938452602084019290925260ff169082015260600161017e565b34801561038057600080fd5b506101bd60025481565b34801561039657600080fd5b506103aa6103a5366004610b04565b6106b7565b604051901515815260200161017e565b3480156103c657600080fd5b506101bd60015481565b61014e6103de366004610b89565b61077d565b3480156103ef57600080fd5b5061014e6103fe366004610ac5565b6108ff565b34801561040f57600080fd5b506101bd61041e366004610c38565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000546001600160a01b031633146104d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c7565b600155565b6000546001600160a01b031633146105b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c7565b6105c260006109e1565b565b6000806000806105d385610643565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa15801561062e573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146106995760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016104c7565b50505060208101516040820151606090920151909260009190911a90565b60408051606087811b6bffffffffffffffffffffffff199081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e4909301909352815191012060009190886001600160a01b031661076682866105c4565b6001600160a01b0316149998505050505050505050565b6001543410156107cf5760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e2066656500000000000000000060448201526064016104c7565b336000908152600460205260408120546003549091906107fc906001600160a01b031687878786886106b7565b90508061084b5760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016104c7565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905285906001600160a01b03821690636352211e9060240160206040518083038186803b1580156108a657600080fd5b505afa9250505080156108d6575060408051601f3d908101601f191682019092526108d391810190610ae8565b60015b6108df576108f6565b6001600160a01b03811630146108f457600080fd5b505b50505050505050565b6000546001600160a01b031633146109595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c7565b6001600160a01b0381166109d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104c7565b6109de816109e1565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610a4e578081fd5b813567ffffffffffffffff80821115610a6957610a69610cd0565b604051601f8301601f19908116603f01168101908282118183101715610a9157610a91610cd0565b81604052838152866020858801011115610aa9578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610ad6578081fd5b8135610ae181610cff565b9392505050565b600060208284031215610af9578081fd5b8151610ae181610cff565b60008060008060008060c08789031215610b1c578182fd5b8635610b2781610cff565b95506020870135610b3781610cff565b94506040870135610b4781610cff565b9350606087013592506080870135915060a087013567ffffffffffffffff811115610b70578182fd5b610b7c89828a01610a3e565b9150509295509295509295565b60008060008060808587031215610b9e578384fd5b8435610ba981610cff565b93506020850135610bb981610cff565b925060408501359150606085013567ffffffffffffffff811115610bdb578182fd5b610be787828801610a3e565b91505092959194509250565b60008060008060808587031215610c08578384fd5b8435610c1381610cff565b93506020850135610c2381610cff565b93969395505050506040820135916060013590565b600060208284031215610c49578081fd5b5035919050565b60008060408385031215610c62578182fd5b82359150602083013567ffffffffffffffff811115610c7f578182fd5b610c8b85828601610a3e565b9150509250929050565b600060208284031215610ca6578081fd5b813567ffffffffffffffff811115610cbc578182fd5b610cc884828501610a3e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b03811681146109de57600080fdfea26469706673582212204b9ec92eb8c6ee8b96b05bf3cdd940850b4c7d79e0fc7542233c868299adf6cd64736f6c63430008040033";

export class IMXBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IMXBridge> {
    return super.deploy(_chainID, overrides || {}) as Promise<IMXBridge>;
  }
  getDeployTransaction(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainID, overrides || {});
  }
  attach(address: string): IMXBridge {
    return super.attach(address) as IMXBridge;
  }
  connect(signer: Signer): IMXBridge__factory {
    return super.connect(signer) as IMXBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMXBridgeInterface {
    return new utils.Interface(_abi) as IMXBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMXBridge {
    return new Contract(address, _abi, signerOrProvider) as IMXBridge;
  }
}
