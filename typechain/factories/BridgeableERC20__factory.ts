/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeableERC20,
  BridgeableERC20Interface,
} from "../BridgeableERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_imxBridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "imxBridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620013393803806200133983398101604081905262000034916200025b565b80838381600390805190602001906200004f92919062000102565b5080516200006590600490602084019062000102565b505050620000826200007c620000ac60201b60201c565b620000b0565b600680546001600160a01b0319166001600160a01b03929092169190911790555062000337915050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011090620002e4565b90600052602060002090601f0160209004810192826200013457600085556200017f565b82601f106200014f57805160ff19168380011785556200017f565b828001600101855582156200017f579182015b828111156200017f57825182559160200191906001019062000162565b506200018d92915062000191565b5090565b5b808211156200018d576000815560010162000192565b600082601f830112620001b9578081fd5b81516001600160401b0380821115620001d657620001d662000321565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000321565b816040528381526020925086838588010111156200021d578485fd5b8491505b8382101562000240578582018301518183018401529082019062000221565b838211156200025157848385830101525b9695505050505050565b60008060006060848603121562000270578283fd5b83516001600160401b038082111562000287578485fd5b6200029587838801620001a8565b94506020860151915080821115620002ab578384fd5b50620002ba86828701620001a8565b604086015190935090506001600160a01b0381168114620002d9578182fd5b809150509250925092565b600181811c90821680620002f957607f821691505b602082108114156200031b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610ff280620003476000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063715018a6116100cd578063a457c2d711610081578063da1919b311610066578063da1919b3146102b4578063dd62ed3e146102c7578063f2fde38b1461030057600080fd5b8063a457c2d71461028e578063a9059cbb146102a157600080fd5b80638da5cb5b116100b25780638da5cb5b1461026257806395d89b41146102735780639dc29fac1461027b57600080fd5b8063715018a61461024757806379cc67901461024f57600080fd5b8063313ce5671161012457806341a432151161010957806341a43215146101de57806342966c681461020957806370a082311461021e57600080fd5b8063313ce567146101bc57806339509351146101cb57600080fd5b806306fdde0314610156578063095ea7b31461017457806318160ddd1461019757806323b872dd146101a9575b600080fd5b61015e610313565b60405161016b9190610ee9565b60405180910390f35b610187610182366004610ea8565b6103a5565b604051901515815260200161016b565b6002545b60405190815260200161016b565b6101876101b7366004610e6d565b6103bd565b6040516012815260200161016b565b6101876101d9366004610ea8565b6103e1565b6006546101f1906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b61021c610217366004610ed1565b610420565b005b61019b61022c366004610e1a565b6001600160a01b031660009081526020819052604090205490565b61021c61042d565b61021c61025d366004610ea8565b610498565b6005546001600160a01b03166101f1565b61015e6104b1565b61021c610289366004610ea8565b6104c0565b61018761029c366004610ea8565b6104ca565b6101876102af366004610ea8565b610574565b61021c6102c2366004610ea8565b610582565b61019b6102d5366004610e3b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021c61030e366004610e1a565b610652565b60606003805461032290610f6b565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90610f6b565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050905090565b6000336103b3818585610731565b5060019392505050565b6000336103cb85828561088a565b6103d685858561091c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103b3908290869061041b908790610f3c565b610731565b61042a3382610b33565b50565b6005546001600160a01b0316331461048c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6104966000610cb0565b565b6104a382338361088a565b6104ad8282610b33565b5050565b60606004805461032290610f6b565b6104ad8282610d1a565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105675760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610483565b6103d68286868403610731565b6000336103b381858561091c565b6006546001600160a01b031633146106025760405162461bcd60e51b815260206004820152602860248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279204960448201527f4d584272696467650000000000000000000000000000000000000000000000006064820152608401610483565b61060c8282610d1a565b604080516001600160a01b0384168152602081018390527f5138d4c70db2cb3c71272ed7eb2caca17373b1a6f0cc5a0b632fb82b2a2871af910160405180910390a15050565b6005546001600160a01b031633146106ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610483565b6001600160a01b0381166107285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610483565b61042a81610cb0565b6001600160a01b0383166107ac5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461091657818110156109095760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610483565b6109168484848403610731565b50505050565b6001600160a01b0383166109985760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b038216610a145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b03831660009081526020819052604090205481811015610aa35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ada908490610f3c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b2691815260200190565b60405180910390a3610916565b6001600160a01b038216610baf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b03821660009081526020819052604090205481811015610c3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610483565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c6d908490610f54565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161087d565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6104ad82826001600160a01b038216610d755760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610483565b8060026000828254610d879190610f3c565b90915550506001600160a01b03821660009081526020819052604081208054839290610db4908490610f3c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610e1557600080fd5b919050565b600060208284031215610e2b578081fd5b610e3482610dfe565b9392505050565b60008060408385031215610e4d578081fd5b610e5683610dfe565b9150610e6460208401610dfe565b90509250929050565b600080600060608486031215610e81578081fd5b610e8a84610dfe565b9250610e9860208501610dfe565b9150604084013590509250925092565b60008060408385031215610eba578182fd5b610ec383610dfe565b946020939093013593505050565b600060208284031215610ee2578081fd5b5035919050565b6000602080835283518082850152825b81811015610f1557858101830151858201604001528201610ef9565b81811115610f265783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610f4f57610f4f610fa6565b500190565b600082821015610f6657610f66610fa6565b500390565b600181811c90821680610f7f57607f821691505b60208210811415610fa057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b1b1ade52269555fdff864abb857f8ae10fc160d4a6548a2f847e87bb1a36b2864736f6c63430008040033";

export class BridgeableERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeableERC20> {
    return super.deploy(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    ) as Promise<BridgeableERC20>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    );
  }
  attach(address: string): BridgeableERC20 {
    return super.attach(address) as BridgeableERC20;
  }
  connect(signer: Signer): BridgeableERC20__factory {
    return super.connect(signer) as BridgeableERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeableERC20Interface {
    return new utils.Interface(_abi) as BridgeableERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeableERC20 {
    return new Contract(address, _abi, signerOrProvider) as BridgeableERC20;
  }
}
