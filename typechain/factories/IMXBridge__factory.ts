/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IMXBridge, IMXBridgeInterface } from "../IMXBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC20Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC721Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "ERC721Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSignerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bridgedTokenAddress",
        type: "address",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signerAddress",
        type: "address",
      },
    ],
    name: "setSignerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001ae738038062001ae7833981016040819052610031916100b3565b61003a33610063565b600380546001600160a01b0319166001600160a01b0393909316929092179091556002556100eb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100c5578182fd5b82516001600160a01b03811681146100db578283fd5b6020939093015192949293505050565b6119ec80620000fb6000396000f3fe6080604052600436106101295760003560e01c8063a06617cd116100a5578063d29a4bf611610074578063d8619f5611610059578063d8619f561461033f578063ddca3f4314610352578063f2fde38b1461036857600080fd5b8063d29a4bf6146102ff578063d7e5fbf31461031f57600080fd5b8063a06617cd1461028b578063a26cb270146102c1578063adc879e9146102d4578063ced72f87146102ea57600080fd5b806369fe0e2d116100fc5780637ecebe00116100e15780637ecebe00146102205780638da5cb5b1461024d57806397feb9261461026b57600080fd5b806369fe0e2d146101eb578063715018a61461020b57600080fd5b8063046dc1661461012e5780631a296e02146101505780632d0335ab146101875780635b7633d0146101cb575b600080fd5b34801561013a57600080fd5b5061014e610149366004611740565b610388565b005b34801561015c57600080fd5b506003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019357600080fd5b506101bd6101a2366004611740565b6001600160a01b031660009081526004602052604090205490565b60405190815260200161017e565b3480156101d757600080fd5b5060035461016a906001600160a01b031681565b3480156101f757600080fd5b5061014e6102063660046118d4565b610416565b34801561021757600080fd5b5061014e610475565b34801561022c57600080fd5b506101bd61023b366004611740565b60046020526000908152604090205481565b34801561025957600080fd5b506000546001600160a01b031661016a565b34801561027757600080fd5b5061014e610286366004611889565b6104db565b34801561029757600080fd5b5061016a6102a6366004611740565b6005602052600090815260409020546001600160a01b031681565b61014e6102cf3660046117b0565b610688565b3480156102e057600080fd5b506101bd60025481565b3480156102f657600080fd5b506001546101bd565b34801561030b57600080fd5b5061014e61031a366004611889565b610a24565b34801561032b57600080fd5b5061014e61033a366004611778565b610b52565b61014e61034d3660046117b0565b610be7565b34801561035e57600080fd5b506101bd60015481565b34801561037457600080fd5b5061014e610383366004611740565b610e1a565b6000546001600160a01b031633146103e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103de565b600155565b6000546001600160a01b031633146104cf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103de565b6104d96000610efc565b565b6001600160a01b038083166000908152600560205260409020548391166105445760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064016103de565b600082116105945760405162461bcd60e51b815260206004820152601260248201527f4465706f7369742063616e27742062652030000000000000000000000000000060448201526064016103de565b6001600160a01b03808416600090815260056020526040902054166105bb81333086610f59565b6040517f9dc29fac000000000000000000000000000000000000000000000000000000008152306004820152602481018490526001600160a01b03821690639dc29fac90604401600060405180830381600087803b15801561061c57600080fd5b505af1158015610630573d6000803e3d6000fd5b505060408051338152602081018790526001600160a01b038516918101919091527f10210aba465589e42fd8145472c6bbce9f47079ffa6fe89f5c6e741fae43bcea925060600190505b60405180910390a150505050565b6001543410156106da5760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e2066656500000000000000000060448201526064016103de565b6001600160a01b038084166000908152600560205260409020548491166107435760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064016103de565b6001600160a01b038481166000908152600560209081526040808320543384526004909252822054600354918416939092916107849116898989868a610fe7565b9050806107d35760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103de565b6001600160a01b0388166000908152600460205260409020546107f7906001611054565b6001600160a01b0389811660009081526004602081905260409182902093909355517f6352211e000000000000000000000000000000000000000000000000000000008152918201889052849190821690636352211e9060240160206040518083038186803b15801561086957600080fd5b505afa925050508015610899575060408051601f3d908101601f191682019092526108969181019061175c565b60015b6109085760405163da1919b360e01b81526001600160a01b038a811660048301526024820189905285919082169063da1919b390604401600060405180830381600087803b1580156108ea57600080fd5b505af11580156108fe573d6000803e3d6000fd5b50505050506109ca565b6001600160a01b03811630146109605760405162461bcd60e51b815260206004820152601a60248201527f455243373231206973206e6f74206f6e20746865207661756c7400000000000060448201526064016103de565b604051632142170760e11b81523060048201526001600160a01b038b81166024830152604482018a90528316906342842e0e90606401600060405180830381600087803b1580156109b057600080fd5b505af11580156109c4573d6000803e3d6000fd5b50505050505b604080516001600160a01b03808c168252602082018a90528616918101919091527fe2d807fc8c90ab37f9344f780c2fd13681207c17b810d5cb6c066191c05f4639906060015b60405180910390a1505050505050505050565b6001600160a01b03808316600090815260056020526040902054839116610a8d5760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064016103de565b6001600160a01b0383811660009081526005602052604090819020549051632142170760e11b81523360048201523060248201526044810185905291169081906342842e0e90606401600060405180830381600087803b158015610af057600080fd5b505af1158015610b04573d6000803e3d6000fd5b505060408051338152602081018790526001600160a01b038516918101919091527f4be8f6117fc663fc6fbe495d6c7fd7f779b427f47d36bb2fb98523ca943eaa889250606001905061067a565b6000546001600160a01b03163314610bac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103de565b6001600160a01b039182166000908152600560205260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b600154341015610c395760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e2066656500000000000000000060448201526064016103de565b6001600160a01b03808416600090815260056020526040902054849116610ca25760405162461bcd60e51b815260206004820152601a60248201527f436f6e7472616374206973206e6f74207265676973746572656400000000000060448201526064016103de565b6001600160a01b03848116600090815260056020908152604080832054338452600490925282205460035491841693909291610ce39116898989868a610fe7565b905080610d325760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e617475726500000000000000000000000000000060448201526064016103de565b6001600160a01b038816600090815260046020526040902054610d56906001611054565b6001600160a01b03898116600081815260046020819052604091829020949094555163da1919b360e01b8152928301526024820188905284919082169063da1919b390604401600060405180830381600087803b158015610db657600080fd5b505af1158015610dca573d6000803e3d6000fd5b5050604080516001600160a01b03808e168252602082018c90528816918101919091527f38c796d42faa6e2ff4bfd87672a65992ceccc9e4cacff9aeb11eb6145da8444192506060019050610a11565b6000546001600160a01b03163314610e745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103de565b6001600160a01b038116610ef05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103de565b610ef981610efc565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610fe1908590611067565b50505050565b60408051606087811b6bffffffffffffffffffffffff199081166020808501919091529188901b1660348301526048820186905260688083018690528351808403909101815260889092019092528051910120600090611048888285611151565b98975050505050505050565b6000611060828461193b565b9392505050565b60006110bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111d49092919063ffffffff16565b80519091501561114c57808060200190518101906110da91906118b4565b61114c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103de565b505050565b6000806111ab846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050846001600160a01b03166111c182856111eb565b6001600160a01b03161495945050505050565b60606111e3848460008561120f565b949350505050565b60008060006111fa8585611357565b91509150611207816113c7565b509392505050565b6060824710156112875760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103de565b6001600160a01b0385163b6112de5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103de565b600080866001600160a01b031685876040516112fa91906118ec565b60006040518083038185875af1925050503d8060008114611337576040519150601f19603f3d011682016040523d82523d6000602084013e61133c565b606091505b509150915061134c8282866115c8565b979650505050505050565b60008082516041141561138e5760208301516040840151606085015160001a61138287828585611601565b945094505050506113c0565b8251604014156113b857602083015160408401516113ad8683836116ee565b9350935050506113c0565b506000905060025b9250929050565b60008160048111156113e957634e487b7160e01b600052602160045260246000fd5b14156113f25750565b600181600481111561141457634e487b7160e01b600052602160045260246000fd5b14156114625760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103de565b600281600481111561148457634e487b7160e01b600052602160045260246000fd5b14156114d25760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103de565b60038160048111156114f457634e487b7160e01b600052602160045260246000fd5b141561154d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103de565b600481600481111561156f57634e487b7160e01b600052602160045260246000fd5b1415610ef95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103de565b606083156115d7575081611060565b8251156115e75782518084602001fd5b8160405162461bcd60e51b81526004016103de9190611908565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561163857506000905060036116e5565b8460ff16601b1415801561165057508460ff16601c14155b1561166157506000905060046116e5565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156116b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116de576000600192509250506116e5565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161172460ff86901c601b61193b565b905061173287828885611601565b935093505050935093915050565b600060208284031215611751578081fd5b8135611060816119a1565b60006020828403121561176d578081fd5b8151611060816119a1565b6000806040838503121561178a578081fd5b8235611795816119a1565b915060208301356117a5816119a1565b809150509250929050565b600080600080608085870312156117c5578182fd5b84356117d0816119a1565b935060208501356117e0816119a1565b925060408501359150606085013567ffffffffffffffff80821115611803578283fd5b818701915087601f830112611816578283fd5b8135818111156118285761182861198b565b604051601f8201601f19908116603f011681019083821181831017156118505761185061198b565b816040528281528a6020848701011115611868578586fd5b82602086016020830137918201602001949094529598949750929550505050565b6000806040838503121561189b578182fd5b82356118a6816119a1565b946020939093013593505050565b6000602082840312156118c5578081fd5b81518015158114611060578182fd5b6000602082840312156118e5578081fd5b5035919050565b600082516118fe81846020870161195f565b9190910192915050565b602081526000825180602084015261192781604085016020870161195f565b601f01601f19169190910160400192915050565b6000821982111561195a57634e487b7160e01b81526011600452602481fd5b500190565b60005b8381101561197a578181015183820152602001611962565b83811115610fe15750506000910152565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610ef957600080fdfea26469706673582212206eb57c82cb6ab979040e99f7807356bf380941d4e8da1361a5f7488d3aea321c64736f6c63430008040033";

export class IMXBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _signerAddress: string,
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IMXBridge> {
    return super.deploy(
      _signerAddress,
      _chainID,
      overrides || {}
    ) as Promise<IMXBridge>;
  }
  getDeployTransaction(
    _signerAddress: string,
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _signerAddress,
      _chainID,
      overrides || {}
    );
  }
  attach(address: string): IMXBridge {
    return super.attach(address) as IMXBridge;
  }
  connect(signer: Signer): IMXBridge__factory {
    return super.connect(signer) as IMXBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMXBridgeInterface {
    return new utils.Interface(_abi) as IMXBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMXBridge {
    return new Contract(address, _abi, signerOrProvider) as IMXBridge;
  }
}
