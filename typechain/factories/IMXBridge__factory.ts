/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { IMXBridge, IMXBridgeInterface } from "../IMXBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "chainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredContracts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_publicKey",
        type: "address",
      },
    ],
    name: "setSignerPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dcc380380610dcc83398101604081905261002f91610090565b61003833610040565b6002556100a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100a1578081fd5b5051919050565b610d15806100b76000396000f3fe60806040526004361061010e5760003560e01c806397aba7f9116100a5578063d1024b4511610074578063e70c36ed11610059578063e70c36ed1461039b578063f2fde38b146103ae578063fa540801146103ce57600080fd5b8063d1024b4514610355578063ddca3f431461038557600080fd5b806397aba7f9146102ab578063a06617cd146102cb578063a7bb580314610301578063adc879e91461033f57600080fd5b806369fe0e2d116100e157806369fe0e2d1461022b578063715018a61461024b5780637ecebe00146102605780638da5cb5b1461028d57600080fd5b80630b71a0b714610113578063238ac9331461019b5780632d0335ab146101d35780633006178314610209575b600080fd5b34801561011f57600080fd5b5061018861012e366004610bbe565b6040516bffffffffffffffffffffffff19606086811b8216602084015285901b1660348201526048810183905260688101829052600090608801604051602081830303815290604052805190602001209050949350505050565b6040519081526020015b60405180910390f35b3480156101a757600080fd5b506003546101bb906001600160a01b031681565b6040516001600160a01b039091168152602001610192565b3480156101df57600080fd5b506101886101ee366004610a90565b6001600160a01b031660009081526004602052604090205490565b34801561021557600080fd5b50610229610224366004610a90565b61043c565b005b34801561023757600080fd5b50610229610246366004610c03565b6104ca565b34801561025757600080fd5b50610229610529565b34801561026c57600080fd5b5061018861027b366004610a90565b60046020526000908152604090205481565b34801561029957600080fd5b506000546001600160a01b03166101bb565b3480156102b757600080fd5b506101bb6102c6366004610c1b565b61058f565b3480156102d757600080fd5b506101bb6102e6366004610a90565b6005602052600090815260409020546001600160a01b031681565b34801561030d57600080fd5b5061032161031c366004610c60565b61060e565b60408051938452602084019290925260ff1690820152606001610192565b34801561034b57600080fd5b5061018860025481565b34801561036157600080fd5b50610375610370366004610acf565b610682565b6040519015158152602001610192565b34801561039157600080fd5b5061018860015481565b6102296103a9366004610b54565b610748565b3480156103ba57600080fd5b506102296103c9366004610a90565b6108ca565b3480156103da57600080fd5b506101886103e9366004610c03565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000546001600160a01b0316331461049b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610492565b600155565b6000546001600160a01b031633146105835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610492565b61058d60006109ac565b565b60008060008061059e8561060e565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156105f9573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146106645760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610492565b50505060208101516040820151606090920151909260009190911a90565b60408051606087811b6bffffffffffffffffffffffff199081166020808501919091529188901b166034830152604882018690526068808301869052835180840390910181526088830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000060a884015260c48084018290528451808503909101815260e4909301909352815191012060009190886001600160a01b0316610731828661058f565b6001600160a01b0316149998505050505050505050565b60015434101561079a5760405162461bcd60e51b815260206004820152601760248201527f54782076616c7565206c6f776572207468616e206665650000000000000000006044820152606401610492565b336000908152600460205260408120546003549091906107c7906001600160a01b03168787878688610682565b9050806108165760405162461bcd60e51b815260206004820152601160248201527f496e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610492565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810185905285906001600160a01b03821690636352211e9060240160206040518083038186803b15801561087157600080fd5b505afa9250505080156108a1575060408051601f3d908101601f1916820190925261089e91810190610ab3565b60015b6108aa576108c1565b6001600160a01b03811630146108bf57600080fd5b505b50505050505050565b6000546001600160a01b031633146109245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610492565b6001600160a01b0381166109a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610492565b6109a9816109ac565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082601f830112610a19578081fd5b813567ffffffffffffffff80821115610a3457610a34610c9b565b604051601f8301601f19908116603f01168101908282118183101715610a5c57610a5c610c9b565b81604052838152866020858801011115610a74578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610aa1578081fd5b8135610aac81610cca565b9392505050565b600060208284031215610ac4578081fd5b8151610aac81610cca565b60008060008060008060c08789031215610ae7578182fd5b8635610af281610cca565b95506020870135610b0281610cca565b94506040870135610b1281610cca565b9350606087013592506080870135915060a087013567ffffffffffffffff811115610b3b578182fd5b610b4789828a01610a09565b9150509295509295509295565b60008060008060808587031215610b69578384fd5b8435610b7481610cca565b93506020850135610b8481610cca565b925060408501359150606085013567ffffffffffffffff811115610ba6578182fd5b610bb287828801610a09565b91505092959194509250565b60008060008060808587031215610bd3578384fd5b8435610bde81610cca565b93506020850135610bee81610cca565b93969395505050506040820135916060013590565b600060208284031215610c14578081fd5b5035919050565b60008060408385031215610c2d578182fd5b82359150602083013567ffffffffffffffff811115610c4a578182fd5b610c5685828601610a09565b9150509250929050565b600060208284031215610c71578081fd5b813567ffffffffffffffff811115610c87578182fd5b610c9384828501610a09565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b03811681146109a957600080fdfea2646970667358221220b4c787f59be689286dbd872314df1f195b451071e677709d90e04a98bfafc08f64736f6c63430008040033";

export class IMXBridge__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IMXBridge> {
    return super.deploy(_chainID, overrides || {}) as Promise<IMXBridge>;
  }
  getDeployTransaction(
    _chainID: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainID, overrides || {});
  }
  attach(address: string): IMXBridge {
    return super.attach(address) as IMXBridge;
  }
  connect(signer: Signer): IMXBridge__factory {
    return super.connect(signer) as IMXBridge__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMXBridgeInterface {
    return new utils.Interface(_abi) as IMXBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMXBridge {
    return new Contract(address, _abi, signerOrProvider) as IMXBridge;
  }
}
