/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeableERC721,
  BridgeableERC721Interface,
} from "../BridgeableERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_imxBridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ERC721Bridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "imxBridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "mintFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d1b38038062001d1b83398101604081905262000034916200025b565b80838381600090805190602001906200004f92919062000102565b5080516200006590600190602084019062000102565b505050620000826200007c620000ac60201b60201c565b620000b0565b600780546001600160a01b0319166001600160a01b03929092169190911790555062000337915050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011090620002e4565b90600052602060002090601f0160209004810192826200013457600085556200017f565b82601f106200014f57805160ff19168380011785556200017f565b828001600101855582156200017f579182015b828111156200017f57825182559160200191906001019062000162565b506200018d92915062000191565b5090565b5b808211156200018d576000815560010162000192565b600082601f830112620001b9578081fd5b81516001600160401b0380821115620001d657620001d662000321565b604051601f8301601f19908116603f0116810190828211818310171562000201576200020162000321565b816040528381526020925086838588010111156200021d578485fd5b8491505b8382101562000240578582018301518183018401529082019062000221565b838211156200025157848385830101525b9695505050505050565b60008060006060848603121562000270578283fd5b83516001600160401b038082111562000287578485fd5b6200029587838801620001a8565b94506020860151915080821115620002ab578384fd5b50620002ba86828701620001a8565b604086015190935090506001600160a01b0381168114620002d9578182fd5b809150509250925092565b600181811c90821680620002f957607f821691505b602082108114156200031b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6119d480620003476000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063715018a6116100cd578063c87b56dd11610081578063da1919b311610066578063da1919b3146102a2578063e985e9c5146102b5578063f2fde38b146102f157600080fd5b8063c87b56dd14610287578063d547cfb71461029a57600080fd5b806395d89b41116100b257806395d89b4114610259578063a22cb46514610261578063b88d4fde1461027457600080fd5b8063715018a6146102405780638da5cb5b1461024857600080fd5b806323b872dd1161012457806342842e0e1161010957806342842e0e146101f95780636352211e1461020c57806370a082311461021f57600080fd5b806323b872dd146101d357806341a43215146101e657600080fd5b806301ffc9a71461015657806306fdde031461017e578063081812fc14610193578063095ea7b3146101be575b600080fd5b610169610164366004611773565b610304565b60405190151581526020015b60405180910390f35b6101866103a1565b604051610175919061185a565b6101a66101a13660046117ab565b610433565b6040516001600160a01b039091168152602001610175565b6101d16101cc36600461174a565b6104cd565b005b6101d16101e1366004611600565b6105ff565b6007546101a6906001600160a01b031681565b6101d1610207366004611600565b610686565b6101a661021a3660046117ab565b6106a1565b61023261022d3660046115b4565b61072c565b604051908152602001610175565b6101d16107c6565b6006546001600160a01b03166101a6565b61018661082c565b6101d161026f366004611710565b61083b565b6101d161028236600461163b565b61084a565b6101866102953660046117ab565b6108d8565b6101866109ce565b6101d16102b036600461174a565b610a5c565b6101696102c33660046115ce565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101d16102ff3660046115b4565b610b2c565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061036757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061039b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546103b0906118dc565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc906118dc565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166104b15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104d8826106a1565b9050806001600160a01b0316836001600160a01b031614156105625760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016104a8565b336001600160a01b038216148061057e575061057e81336102c3565b6105f05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104a8565b6105fa8383610c0e565b505050565b6106093382610c89565b61067b5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104a8565b6105fa838383610d80565b6105fa8383836040518060200160405280600081525061084a565b6000818152600260205260408120546001600160a01b03168061039b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016104a8565b60006001600160a01b0382166107aa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016104a8565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146108205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a8565b61082a6000610f5a565b565b6060600180546103b0906118dc565b610846338383610fb9565b5050565b6108543383610c89565b6108c65760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016104a8565b6108d284848484611088565b50505050565b6000818152600260205260409020546060906001600160a01b03166109655760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016104a8565b600061097c60408051602081019091526000815290565b9050600081511161099c57604051806020016040528060008152506109c7565b806109a684611106565b6040516020016109b79291906117ef565b6040516020818303038152906040525b9392505050565b600880546109db906118dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a07906118dc565b8015610a545780601f10610a2957610100808354040283529160200191610a54565b820191906000526020600020905b815481529060010190602001808311610a3757829003601f168201915b505050505081565b6007546001600160a01b03163314610adc5760405162461bcd60e51b815260206004820152602860248201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279204960448201527f4d5842726964676500000000000000000000000000000000000000000000000060648201526084016104a8565b610ae68282611254565b604080516001600160a01b0384168152602081018390527f09ab97590cb807f6df7a0d3ffa2a87e97c0660c66cfe21ea63ad9cbf34d03851910160405180910390a15050565b6006546001600160a01b03163314610b865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a8565b6001600160a01b038116610c025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a8565b610c0b81610f5a565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610c50826106a1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610d025760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104a8565b6000610d0d836106a1565b9050806001600160a01b0316846001600160a01b03161480610d485750836001600160a01b0316610d3d84610433565b6001600160a01b0316145b80610d7857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610d93826106a1565b6001600160a01b031614610e0f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e657200000000000000000000000000000000000000000000000000000060648201526084016104a8565b6001600160a01b038216610e8a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104a8565b610e95600082610c0e565b6001600160a01b0383166000908152600360205260408120805460019290610ebe908490611899565b90915550506001600160a01b0382166000908152600360205260408120805460019290610eec90849061186d565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561101b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611093848484610d80565b61109f8484848461125e565b6108d25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104a8565b60608161114657505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611170578061115a81611917565b91506111699050600a83611885565b915061114a565b60008167ffffffffffffffff81111561119957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111c3576020820181803683370190505b5090505b8415610d78576111d8600183611899565b91506111e5600a86611932565b6111f090603061186d565b60f81b81838151811061121357634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061124d600a86611885565b94506111c7565b61084682826113b6565b60006001600160a01b0384163b156113ab57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112a290339089908890889060040161181e565b602060405180830381600087803b1580156112bc57600080fd5b505af19250505080156112ec575060408051601f3d908101601f191682019092526112e99181019061178f565b60015b611391573d80801561131a576040519150601f19603f3d011682016040523d82523d6000602084013e61131f565b606091505b5080516113895760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104a8565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d78565b506001949350505050565b6108468282604051806020016040528060008152506113d58383611449565b6113e2600084848461125e565b6105fa5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016104a8565b6001600160a01b03821661149f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104a8565b6000818152600260205260409020546001600160a01b0316156115045760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a8565b6001600160a01b038216600090815260036020526040812080546001929061152d90849061186d565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b03811681146115af57600080fd5b919050565b6000602082840312156115c5578081fd5b6109c782611598565b600080604083850312156115e0578081fd5b6115e983611598565b91506115f760208401611598565b90509250929050565b600080600060608486031215611614578081fd5b61161d84611598565b925061162b60208501611598565b9150604084013590509250925092565b60008060008060808587031215611650578081fd5b61165985611598565b935061166760208601611598565b925060408501359150606085013567ffffffffffffffff8082111561168a578283fd5b818701915087601f83011261169d578283fd5b8135818111156116af576116af611972565b604051601f8201601f19908116603f011681019083821181831017156116d7576116d7611972565b816040528281528a60208487010111156116ef578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611722578182fd5b61172b83611598565b91506020830135801515811461173f578182fd5b809150509250929050565b6000806040838503121561175c578182fd5b61176583611598565b946020939093013593505050565b600060208284031215611784578081fd5b81356109c781611988565b6000602082840312156117a0578081fd5b81516109c781611988565b6000602082840312156117bc578081fd5b5035919050565b600081518084526117db8160208601602086016118b0565b601f01601f19169290920160200192915050565b600083516118018184602088016118b0565b8351908301906118158183602088016118b0565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261185060808301846117c3565b9695505050505050565b6020815260006109c760208301846117c3565b6000821982111561188057611880611946565b500190565b6000826118945761189461195c565b500490565b6000828210156118ab576118ab611946565b500390565b60005b838110156118cb5781810151838201526020016118b3565b838111156108d25750506000910152565b600181811c908216806118f057607f821691505b6020821081141561191157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561192b5761192b611946565b5060010190565b6000826119415761194161195c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610c0b57600080fdfea264697066735822122030dbec37c017911761c0f89555d46fd2c5d6f045c121a561fd5745526354bfee64736f6c63430008040033";

export class BridgeableERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeableERC721> {
    return super.deploy(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    ) as Promise<BridgeableERC721>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _imxBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _imxBridgeAddress,
      overrides || {}
    );
  }
  attach(address: string): BridgeableERC721 {
    return super.attach(address) as BridgeableERC721;
  }
  connect(signer: Signer): BridgeableERC721__factory {
    return super.connect(signer) as BridgeableERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeableERC721Interface {
    return new utils.Interface(_abi) as BridgeableERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeableERC721 {
    return new Contract(address, _abi, signerOrProvider) as BridgeableERC721;
  }
}
